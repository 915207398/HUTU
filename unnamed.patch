Index: app/src/main/java/com/example/cai/hutu/plot/activity/PlotActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cai/hutu/plot/activity/PlotActivity.java	(revision 2ca52d83f8c303a70f0cbb3f808a8577adf85d9e)
+++ app/src/main/java/com/example/cai/hutu/plot/activity/PlotActivity.java	(revision )
@@ -23,7 +23,7 @@
 public class PlotActivity extends AppCompatActivity {
     private LinearLayout linearLayout;
     // 折线说明文字
-    private String[] titles = new String[] { "业务一", "业务二" };
+    private String[] titles = new String[]{"业务一", "业务二"};
     // 数据
     private List<double[]> values;
     // 每个数据点的颜色
@@ -34,21 +34,23 @@
     private int[] mSeriescolors;
     // 渲染器
     private XYMultipleSeriesRenderer renderer;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.chart);
         linearLayout = (LinearLayout) findViewById(R.id.chart);
-        SlidingMenu menu=new SlidingMenu(this);
+        SlidingMenu menu = new SlidingMenu(this);
         menu.setMode(SlidingMenu.RIGHT);
         menu.setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);
         menu.setBehindOffsetRes(R.dimen.slidingmenu_set_wight);
-        menu.attachToActivity(this,SlidingMenu.SLIDING_CONTENT);
+        menu.attachToActivity(this, SlidingMenu.SLIDING_CONTENT);
         menu.setMenu(R.layout.slidingmenu);
         initValues();
         drawChart();
 
     }
+
     /**
      * 初始化数据
      */
@@ -57,25 +59,27 @@
         colors = new ArrayList<int[]>();
         explains = new ArrayList<String[]>();
 
-        values.add(new double[] { 500, 450, 700, 710, 420, 430, 400, 390, 290,
-                400, 340, 500 });
-        values.add(new double[] { 523, 450, 320, 370, 480, 570, 420, 350, 400,
-                450, 700, 710 });
+
+
+        values.add(new double[]{500, 450, 700, 710, 420, 430, 400, 390, 290,
+                400, 340, 500});
+        values.add(new double[]{523, 450, 320, 370, 480, 570, 420, 350, 400,
+                450, 700, 710});
 
-        colors.add(new int[] { Color.RED, Color.RED, Color.RED, Color.RED,
+        colors.add(new int[]{Color.RED, Color.RED, Color.RED, Color.RED,
                 Color.RED, Color.RED, Color.RED, Color.RED, Color.RED,
-                Color.RED, Color.RED, Color.RED });
-        colors.add(new int[] { Color.BLUE, Color.BLUE, Color.BLUE, Color.BLUE,
+                Color.RED, Color.RED, Color.RED});
+        colors.add(new int[]{Color.BLUE, Color.BLUE, Color.BLUE, Color.BLUE,
                 Color.GREEN, Color.BLUE, Color.BLUE, Color.BLUE, Color.BLUE,
-                Color.BLUE, Color.BLUE, Color.BLUE });
+                Color.BLUE, Color.BLUE, Color.BLUE});
 
-        explains.add(new String[] { "1月业绩", "2月业绩", "3月业绩", "4月业绩", "5月业绩",
-                "6月业绩", "7月业绩", "8月业绩", "9月业绩", "10月业绩", "11月业绩", "12月业绩" });
-        explains.add(new String[] { "1月业绩", "2月业绩", "3月业绩", "4月业绩", "5月业绩",
-                "6月业绩", "7月业绩", "8月业绩", "9月业绩", "10月业绩", "11月业绩", "12月业绩" });
+        explains.add(new String[]{"1月业绩", "2月业绩", "3月业绩", "4月业绩", "5月业绩",
+                "6月业绩", "7月业绩", "8月业绩", "9月业绩", "10月业绩", "11月业绩", "12月业绩"});
+        explains.add(new String[]{"1月业绩", "2月业绩", "3月业绩", "4月业绩", "5月业绩",
+                "6月业绩", "7月业绩", "8月业绩", "9月业绩", "10月业绩", "11月业绩", "12月业绩"});
 
-        mSeriescolors = new int[] { Color.rgb(153, 204, 0),
-                Color.rgb(247, 185, 64) };
+        mSeriescolors = new int[]{Color.rgb(153, 204, 0),
+                Color.rgb(247, 185, 64)};
     }
 
     /**
@@ -157,11 +161,11 @@
         renderer.setExplainTextSize2(20);
 
         // 临界线
-        double[] limit = new double[] { 15000, 12000, 4000, 9000 };
+        double[] limit = new double[]{15000, 12000, 4000, 9000};
         renderer.setmYLimitsLine(limit);
-        int[] colorsLimit = new int[] { Color.rgb(100, 255, 255),
+        int[] colorsLimit = new int[]{Color.rgb(100, 255, 255),
                 Color.rgb(100, 255, 255), Color.rgb(0, 255, 255),
-                Color.rgb(0, 255, 255) };
+                Color.rgb(0, 255, 255)};
         renderer.setmYLimitsLineColor(colorsLimit);
 
         // 显示表格线
